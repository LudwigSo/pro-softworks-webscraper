/* tslint:disable */
/* eslint-disable */
/**
 * Driving.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectSource } from './ProjectSource';
import {
    ProjectSourceFromJSON,
    ProjectSourceFromJSONTyped,
    ProjectSourceToJSON,
} from './ProjectSource';
import type { Tag } from './Tag';
import {
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
} from './Tag';

/**
 * 
 * @export
 * @interface Project
 */
export interface Project {
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    id?: number;
    /**
     * 
     * @type {ProjectSource}
     * @memberof Project
     */
    source?: ProjectSource;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    projectIdentifier?: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    jobLocation?: string;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    plannedStart?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    postedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    readonly firstSeenAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    readonly removedAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Project
     */
    readonly isActive?: boolean;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof Project
     */
    readonly tags?: Array<Tag>;
}

/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value: object): boolean {
    return true;
}

export function ProjectFromJSON(json: any): Project {
    return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Project {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'source': json['source'] == null ? undefined : ProjectSourceFromJSON(json['source']),
        'title': json['title'] == null ? undefined : json['title'],
        'url': json['url'] == null ? undefined : json['url'],
        'projectIdentifier': json['projectIdentifier'] == null ? undefined : json['projectIdentifier'],
        'description': json['description'] == null ? undefined : json['description'],
        'jobLocation': json['jobLocation'] == null ? undefined : json['jobLocation'],
        'plannedStart': json['plannedStart'] == null ? undefined : (new Date(json['plannedStart'])),
        'postedAt': json['postedAt'] == null ? undefined : (new Date(json['postedAt'])),
        'firstSeenAt': json['firstSeenAt'] == null ? undefined : (new Date(json['firstSeenAt'])),
        'removedAt': json['removedAt'] == null ? undefined : (new Date(json['removedAt'])),
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagFromJSON)),
    };
}

export function ProjectToJSON(value?: Omit<Project, 'firstSeenAt'|'removedAt'|'isActive'|'tags'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'source': ProjectSourceToJSON(value['source']),
        'title': value['title'],
        'url': value['url'],
        'projectIdentifier': value['projectIdentifier'],
        'description': value['description'],
        'jobLocation': value['jobLocation'],
        'plannedStart': value['plannedStart'] == null ? undefined : ((value['plannedStart'] as any).toISOString()),
        'postedAt': value['postedAt'] == null ? undefined : ((value['postedAt'] as any).toISOString()),
    };
}

